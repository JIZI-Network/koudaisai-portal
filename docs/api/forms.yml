openapi: 3.0.3

info:
  title: 工大祭フォームAPI
  description: |-
    工大祭のフォームapiです。
  version: "1"
tags:
  - name: forms
    description: "フォーム関連"
  - name: responses
    description: "フォームの回答関連"

paths:
  /api/v1/forms:
    get:
      summary: "アクセス可能なフォームをすべて取得"
      tags: [ forms ]
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Form"
        "400":
          description: "不正なrequest bodyの形式"
        "401":
          description: "資格情報が無効だった場合"
    post:
      summary: "フォームを新規作成"
      tags: [ forms ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Form"
      responses:
        "201":
          description: "Changed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Form"
        "400":
          description: "不正なrequest bodyの形式"
        "401":
          description: "資格情報が無効だった場合"
  /api/v1/forms/{form_id}:
    put:
      summary: "フォームを更新"
      tags: [ forms ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Form"
      responses:
        "201":
          description: "Changed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Form"
        "400":
          description: "不正なrequest bodyの形式"
        "401":
          description: "資格情報が無効だった場合"
    delete:
      summary: "フォームを削除"
      tags: [ forms ]
      parameters:
        - name: form_id
          in: path
          description: "フォームID"
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "201":
          description: "Changed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Form"
        "401":
          description: "資格情報が無効だった場合"
        "404":
          description: "フォームが存在しない"
  /api/v1/forms/{form_id}/responses:
    post:
      summary: "新たに回答を作成"
      tags: [ responses ]
      parameters:
        - name: form_id
          in: path
          description: "フォームID"
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FormResponse"
      responses:
        "201":
          description: "Changed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Form"
        "401":
          description: "資格情報が無効だった場合"
        "404":
          description: "フォームが存在しない"
    get:
      summary: "すべての回答を取得"
      tags: [ responses ]
      parameters:
        - name: form_id
          in: path
          description: "フォームID"
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: "OK/"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FormResponse"
        "401":
          description: "資格情報が無効だった場合"
        "404":
          description: "フォームが存在しない"
  /api/v1/forms/{form_id}/responses/{response_id}:
    put:
      summary: "回答を編集"
      tags: [ responses ]
      parameters:
        - name: form_id
          in: path
          description: "フォームID"
          required: true
          schema:
            type: string
            format: uuid
        - name: response_id
          in: path
          description: "回答ID"
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FormResponse"
      responses:
        "200":
          description: "OK/"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FormResponse"
        "401":
          description: "資格情報が無効だった場合"
        "404":
          description: "フォームまたは回答が存在しない"
    delete:
      summary: "回答を削除"
      tags: [ responses ]
      parameters:
        - name: form_id
          in: path
          description: "フォームID"
          required: true
          schema:
            type: string
            format: uuid
        - name: response_id
          in: path
          description: "回答ID"
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "201":
          description: "Changed."
        "401":
          description: "資格情報が無効だった場合"
        "404":
          description: "フォームまたは回答が存在しない"



components:
  schemas:
    Form:
      description: "フォーム"
      type: object
      properties:
        form_id:
          description: "フォームID"
          type: string
          format: uuid
        created_at:
          description: "作成日時"
          type: string
          format: datetime
        updated_at:
          description: "更新日時"
          type: string
          format: datetime
        info:
          description: "フォームのタイトルと説明"
          $ref: "#/components/schemas/Info"
        items:
          description: "フォームのアイテムのリスト（質問、改ページ、テキストなど）"
          type: array
          items:
            $ref: "#/components/schemas/Item"
        access_control:
          description: "フォームのアクセス制限"
          $ref: "#/components/schemas/AccessControl"

    Info:
      description: "フォームの一般情報"
      type: object
      properties:
        title:
          description: "回答者に表示されるフォームのタイトル"
          type: string
        document_title:
          description: "編集者に表示されるフォームのタイトル"
          type: string
        description:
          description: "フォームの説明"
          type: string

    Item:
      description: "フォームの単一の項目"
      type: object
      oneOf:
        - required: [ "item_question" ]
        - required: [ "item_page_break" ]
        - required: [ "item_text" ]
      properties:
        item_id:
          description: "アイテムのID"
          type: string
          format: uuid
        created_at:
          description: "作成日時"
          type: string
          format: datetime
        updated_at:
          description: "更新日時"
          type: string
          format: datetime
        title:
          description: "回答者に表示される項目のタイトル"
          type: string
        description:
          description: "回答者に表示される項目の説明"
          type: string
        item_question:
          $ref: "#/components/schemas/ItemQuestion"
        item_page_break:
          $ref: "#/components/schemas/ItemPageBreak"
        item_text:
          $ref: "#/components/schemas/ItemText"

    ItemQuestion:
      description: "一つの質問を含む項目"
      type: object
      properties:
        question:
          description: "表示される質問"
          $ref: "#/components/schemas/Question"

    ItemPageBreak:
      description: "改ページ"
      type: object

    ItemText:
      description: "テキスト"
      type: object

    Question:
      description: "フォームの質問"
      type: object
      oneOf:
        - required: [ "question_text" ]
      properties:
        question_id:
          description: "質問のID"
          type: string
          format: uuid
        created_at:
          description: "作成日時"
          type: string
          format: datetime
        updated_at:
          description: "更新日時"
          type: string
          format: datetime
        required:
          description: "回答必須かどうか"
          type: boolean
        question_text:
          $ref: "#/components/schemas/QuestionText"

    QuestionText:
      description: "テキスト"
      type: object
      properties:
        paragraph:
          type: boolean
          description: "trueの場合複数行にわたるテキスト。falseの場合一行の回答。"

    AccessControl:
      description: "フォームのアクセス制限"
      type: object
      properties:
        roles:
          description: "アクセス可能なロール"
          type: array
          items:
            type: string

    FormResponse:
      description: "フォームの回答"
      type: object
      properties:
        response_id:
          description: "回答のID"
          type: string
          format: uuid
        created_at:
          description: "作成日時"
          type: string
          format: datetime
        updated_at:
          description: "更新日時"
          type: string
          format: datetime
        form_id:
          description: "フォームのID"
          type: string
          format: uuid
        respondent_id:
          description: "回答者のID"
          type: string
          format: uuid
        answers:
          description: "質問に対する回答(question_idをキーとする)"
          type: object

    Answer:
      description: "質問に対する回答"
      type: object
      properties:
        question_id:
          description: "質問のID"
          type: string
          format: uuid
        answer_text:
          $ref: "#/components/schemas/AnswerText"

    AnswerText:
      description: "質問に対する回答をテキストで表したもの"
      type: object
      properties:
        value:
          description: |-
            回答の値
            質問の種類ごとの回答の形式:
            - Text: 回答者が入力したテキスト